// Generated by data binding compiler. Do not edit!
package com.example.practica2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.practica2.R;
import java.lang.Deprecated;
import java.lang.Object;
import java.lang.String;

public abstract class ActivityResultBinding extends ViewDataBinding {
  @NonNull
  public final TextView resultMessage;

  @NonNull
  public final TableRow rowNormalWeight;

  @NonNull
  public final TableRow rowObesity1;

  @NonNull
  public final TableRow rowObesity2;

  @NonNull
  public final TableRow rowObesity3;

  @NonNull
  public final TableRow rowOverweight;

  @NonNull
  public final TableRow rowUnderWeight;

  @Bindable
  protected String mResultImc;

  @Bindable
  protected String mDataWeight;

  @Bindable
  protected String mDataHeight;

  protected ActivityResultBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView resultMessage, TableRow rowNormalWeight, TableRow rowObesity1, TableRow rowObesity2,
      TableRow rowObesity3, TableRow rowOverweight, TableRow rowUnderWeight) {
    super(_bindingComponent, _root, _localFieldCount);
    this.resultMessage = resultMessage;
    this.rowNormalWeight = rowNormalWeight;
    this.rowObesity1 = rowObesity1;
    this.rowObesity2 = rowObesity2;
    this.rowObesity3 = rowObesity3;
    this.rowOverweight = rowOverweight;
    this.rowUnderWeight = rowUnderWeight;
  }

  public abstract void setResultImc(@Nullable String result_imc);

  @Nullable
  public String getResultImc() {
    return mResultImc;
  }

  public abstract void setDataWeight(@Nullable String data_weight);

  @Nullable
  public String getDataWeight() {
    return mDataWeight;
  }

  public abstract void setDataHeight(@Nullable String data_height);

  @Nullable
  public String getDataHeight() {
    return mDataHeight;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_result, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityResultBinding>inflateInternal(inflater, R.layout.activity_result, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_result, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityResultBinding>inflateInternal(inflater, R.layout.activity_result, null, false, component);
  }

  public static ActivityResultBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityResultBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityResultBinding)bind(component, view, R.layout.activity_result);
  }
}
